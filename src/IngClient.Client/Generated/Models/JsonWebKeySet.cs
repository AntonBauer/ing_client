// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace ApiSdk.Models
{
    /// <summary>
    /// ING&apos;s current public key certificate encoded as a JSON Web Key SET (JWKS)
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    internal partial class JsonWebKeySet : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The algorithm for the key</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Alg { get; set; }
#nullable restore
#else
        public string Alg { get; set; }
#endif
        /// <summary>The exponent for a standard pem</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? E { get; set; }
#nullable restore
#else
        public string E { get; set; }
#endif
        /// <summary>The unique identifier for the key</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Kid { get; set; }
#nullable restore
#else
        public string Kid { get; set; }
#endif
        /// <summary>The key type</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Kty { get; set; }
#nullable restore
#else
        public string Kty { get; set; }
#endif
        /// <summary>The modulus for a standard pem</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? N { get; set; }
#nullable restore
#else
        public string N { get; set; }
#endif
        /// <summary>How the key was meant to be used</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Use { get; set; }
#nullable restore
#else
        public string Use { get; set; }
#endif
        /// <summary>The x509 certificate (only the leaf certificate, not the certificate chain)</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? X5c { get; set; }
#nullable restore
#else
        public List<string> X5c { get; set; }
#endif
        /// <summary>The thumbprint of the x.509 cert (SHA-1 thumbprint)</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? X5t { get; set; }
#nullable restore
#else
        public string X5t { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::ApiSdk.Models.JsonWebKeySet"/> and sets the default values.
        /// </summary>
        public JsonWebKeySet()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::ApiSdk.Models.JsonWebKeySet"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::ApiSdk.Models.JsonWebKeySet CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::ApiSdk.Models.JsonWebKeySet();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "alg", n => { Alg = n.GetStringValue(); } },
                { "e", n => { E = n.GetStringValue(); } },
                { "kid", n => { Kid = n.GetStringValue(); } },
                { "kty", n => { Kty = n.GetStringValue(); } },
                { "n", n => { N = n.GetStringValue(); } },
                { "use", n => { Use = n.GetStringValue(); } },
                { "x5c", n => { X5c = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "x5t", n => { X5t = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("alg", Alg);
            writer.WriteStringValue("e", E);
            writer.WriteStringValue("kid", Kid);
            writer.WriteStringValue("kty", Kty);
            writer.WriteStringValue("n", N);
            writer.WriteStringValue("use", Use);
            writer.WriteCollectionOfPrimitiveValues<string>("x5c", X5c);
            writer.WriteStringValue("x5t", X5t);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
